# encoding: utf-8
#
# Redmine plugin for Custom Workflows
#
# Anton Argirov, Karel Pičman <karel.picman@kontron.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

pt-BR:
  project_module_custom_workflows_module: Fluxo de Trabalho Personalizado
  permission_manage_project_workflow: Gerenciar fluxos de trabalho personalizados de projeto

  label_custom_workflow: Fluxo de Trabalho personalizado
  label_custom_workflow_plural: Fluxos de Trabalho personalizados
  label_custom_workflow_new: Criar um fluxo de trabalho personalizado
  label_workflow_scripts: Scripts de fluxo de trabalho
  label_custom_workflow_export: Exportar
  label_custom_workflow_import: Importar fluxo de trabalho
  label_save_workflows: Saving observable objects
  label_destroy_workflows: Destroying observable objects
  label_add_workflows: Adding observable objects to collection
  label_remove_workflows: Removing observable objects from collection

  button_custom_workflow_deactivate: Desativar

  field_after_save: Workflow script executable after saving observable object
  field_before_save: Workflow script executable before saving observable object
  field_after_destroy: Workflow script executable after destroying observable object
  field_before_destroy: Workflow script executable before destroying observable object
  field_after_add: Workflow script executable after adding observable object to collection
  field_before_add: Workflow script executable before adding observable object to collection
  field_after_remove: Workflow script executable after removing observable object from collection
  field_before_remove: Workflow script executable before removing observable object from collection
  field_shared_code: Shared code
  field_observable: Observable object
  field_enabled_for_all_projects: Ativado para todos os projetos
  field_custom_workflow_author: E-mail do autor
  field_custom_workflow_file: Selecione o arquivo XML exportado anteriormente
  field_custom_workflow:
    script: Script do Fluxo de Trabalho

  notice_successful_import: Fluxo de Trabalho Personalizado foi importado com sucesso
  notice_successful_status_change: Situação foi alterada com sucesso
  error_failed_import: Erro ao importar o fluxo de trabalho customizado (Formato desconhecido? Por favor verifique o log)

  activerecord:
    errors:
      messages:
        invalid_script: "contém erro: %{error}"
        custom_workflow_error: Erro no fluxo de trabalho customizado (Por favor contate o administrador)
        new_status_invalid: "Transição de '%{old_status}' para '%{new_status}' é proibida"
        scripts_absent: At least one script should be defined

  text_select_project_custom_workflows: Selecione o projeto para os fluxos de trabalho
  text_custom_workflow_before_save_note: Você pode alterar as propriedades das tarefas aqui. Não crie ou atualize
    tarefas relacionadas neste script. Para terminar com o erro, utilize a `raise RedmineCustomWorkflows::Errors::WorkflowError, 'Mensagem para o usuário'`.
  text_custom_workflow_after_save_note: Você pode atualizar ou criar tarefas relacionadas aqui. Note que esse script
    também será executado para as tarefas criadas recentemente. Então, faça as verificações adequadas para evitar que
    entre em recursividade infinita.
  text_custom_workflow_issue_code_note: Ambos os scripts são executados no contexto da tarefa pelas chamadas before_save
    com retornos para a chamada after_save. Portanto, use métodos e propriedades da tarefa diretamente
    (ou através de "self"). Variáveis de instância (@variable) também são permitidos e podem ser utilizados, se necessário.
  text_custom_workflow_issue_relation_code_note: Scripts are executed in the context of IssueRelation object like ordinary
    before_save and after_save callbacks. So use methods and properties of the issue relation directly (or through `self`).
    Instance variables (@variable) are also allowed and may be used if needed.
  text_custom_workflow_shared_code_note: This code will run before any other workflow and may contain shared code,
    e.g. functions and classes needed by other workflows.
  text_custom_workflow_user_code_note: Both scripts are executed in the context of the user object when user object
    changes. Use methods and properties of the user directly (or through `self`)
  text_custom_workflow_member_code_note: Scripts are executed in the context of Member object when member object changes
    (destroys). Use methods and properties of the @member directly (or through `self`)
  text_custom_workflow_group_code_note: Both scripts are executed in the context of the group object when group object
    changes. Use methods and properties of the group directly (or through `self`)
  text_custom_workflow_group_users_code_note: These scripts are executed when user being added to group/removed from
    group. Use variables @user and @group to access appropriate objects in your scripts.
  text_custom_workflow_attachment_code_note: Scripts are executed in the context of Attachment object when attachment
    object changes (destroys). Use methods and properties of the attachment object directly (or through `self`). Note that
    these scripts will affect all attachment types (issue, document, wiki pages and etc), so you should check
    'container_type' field additionally in your script or select specific '... Attachments' observable object.
  text_custom_workflow_issue_attachments_code_note: These scripts are executed when attachment being added to
    issue/removed from issue. Use variables @issue and @attachment to access appropriate objects in your scripts.
  text_custom_workflow_project_code_note: Scripts are executed in the context of Project object when project object
    changes (destroys). Use methods and properties of the project directly (or through `self`)
  text_custom_workflow_project_attachments_code_note: These scripts are executed when a file being added to
    project/removed from project. Use variables @project and @attachment to access appropriate objects in your scripts.
  text_custom_workflow_wiki_content_code_note: Scripts are executed in the context of Wiki Content object when project
    object changes (destroys). Use methods and properties of the project directly (or through `self`)
  text_custom_workflow_wiki_page_attachments_code_note: These scripts are executed when a file being added to wiki
    page/removed from wiki page. Use variables @page and @attachment to access appropriate objects in your scripts.
  text_custom_workflow_time_entry_code_note: Scripts are executed in the context of TimeEntry object when time enty
    object changes (destroys). Use methods and properties of the time entry directly (or through `self`)
  text_custom_workflow_version_code_note: Scripts are executed in the context of Version object when version object
    changes (destroys). Use methods and properties of the version directly (or through `self`)
  text_custom_workflow_before_destroy_note: To prevent destroying of the object use `return false`.

  text_no_enabled_projects: Não há projeto
  text_custom_workflow_author: Será incluído no XML exportado
  text_custom_workflow_disabled: desabilitado por admin
  text_custom_workflow_is_for_all: Ativado para todos os projetos

  custom_workflow_observable_shared: <shared code>
  custom_workflow_observable_issue: Issue
  custom_workflow_observable_issue_attachments: Issue Attachments
  custom_workflow_observable_group: Group
  custom_workflow_observable_user: User
  custom_workflow_observable_attachment: Attachment
  custom_workflow_observable_member: Membro
  custom_workflow_observable_project: Project
  custom_workflow_observable_project_attachments: Project Attachments / Files
  custom_workflow_observable_wiki_content: Wiki Content
  custom_workflow_observable_wiki_page_attachments: Wiki Page Attachments
  custom_workflow_observable_group_users: Group Users
  custom_workflow_observable_time_entry: Time Entry
  custom_workflow_observable_version: Version
